//<<Copyright 2014 Pablo Espinosa GÃ³mez>>
/*
    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/

#include <SPI.h>
#include <Ethernet.h>
#include <EthernetDNS.h>
#include <LiquidCrystal.h>
#include <Twitter.h>

//Define the messages for the Twitter posts
#define arduinoOn 1
#define lightsOn 2
#define lightsOff 3
#define automaticOn 4
#define automaticOff 5
#define blindsUp 6
#define blindsDown 7

//Define the default values for this parameters
#define messageOK 200
#define lightAmount 600

//MAC from the Ethernet Shield
byte mac[] = {0x90, 0xA2, 0xDA, 0x0E, 0x09, 0x2D}; //MAC

//Local IP for the control panel
IPAddress ip(192, 168, 1, 111); //IP

//Define an ethernet server
EthernetServer server(80);

//Pins for the LCD
LiquidCrystal lcd(2, 3, 4, 5, 6, 7);

//Token from the Twitter account
Twitter twitter("2389536108-ivbusXpJ43c3WjBium1hz4NxwwbJQx0CPV57eAM");

//Define pins
int pinLed = 11, pinBliUp = 9, pinBliDow = 8, pinLight = 0, pinTemBLIature = 1;
String readString = String(30);
String stateLed = String(3), stateBli = String(6), stateAut = String(3);
boolean stateLightsOff = true, connectedClient = false;
int light = A0;

//Define variables for the Twitter posts
char tweet[30];
char msgArduinoOn[30] = "Arduino connected";
char msgLightsOn[30] = "Lights turn ON";
char msgLightsOff[30] = "Lights turn OFF";
char msgAutomaticOn[30] = "Automatic ON";
char msgAutomaticOff[30] = "Automatic OFF";
char msgBlindsUp[30] = "Blinds up";
char msgBlindsDown[30] = "Blinds down";

void setup()
{
	//Start the Ethernet
	Ethernet.begin(mac, ip);
	
	//Start the server
	server.begin();
	
	//Configuration for the pins
	pinMode(pinLed, OUTPUT);
	pinMode(pinBliUp, OUTPUT);
	pinMode(pinBliDow, OUTPUT);
	pinMode(pinLight, INPUT);
	pinMode(pinTemBLIature, INPUT);
	
	//Initialization of state variables
	stateLed = "OFF";
	stateBli = "DOWN";
	stateAut = "OFF";
	
	//Initialization for the LCD
	lcd.begin(16, 2);
	
	//Initialization for the Serial Port
	Serial.begin(9600);
	
	//Post message Arduino ON
	postTweet(arduinoOn);
	printLCD("Arduino ON");
}

void loop()
{
	//Check for changes in the web page
	checkWeb();
	
	//Check the LDR
	checkLight();
}

void checkWeb()
{
	//Variables to read the state of the buttons from the web
	int LED, AUT, BLI;
	
	//Creation of the client
	EthernetClient client = server.available();
	connectedClient = true;
	if(client)
	{
		boolean whiteLine = true;
		while(client.connected())
		{
			if(client.available())
			{
				char c = client.read();
				if(readString.length() < 30)
				{
					readString.concat(c);
				}
				if(c == '\n' && whiteLine)
				{
					//Here the variables catch the values
					LED = readString.indexOf("LED=");
					AUT=readString.indexOf("AUT=");
					BLI = readString.indexOf("BLI=");
					
					//Here check the different values of the variables
					if(readString.substring(LED, LED + 5) == "LED=T")
					{
						digitalWrite(pinLed, HIGH);
						stateLed = "ON";
						stateLightsOff = false;
						postTweet(lightsOn);
						printLCD("Lights ON");
					}
					else if (readString.substring(LED, LED + 5) == "LED=F")
					{
						digitalWrite(pinLed, LOW);
						stateLed = "OFF";
						stateLightsOff = true;
						postTweet(lightsOff);
						printLCD("Lights OFF");
					}
					
					if(readString.substring(AUT, AUT + 5) == "AUT=T")
					{
						stateAut = "ON";
						postTweet(automaticOn);
						printLCD("Automatic ON");
					}
					else if (readString.substring(AUT, AUT + 5) == "AUT=F")
					{
						stateAut = "OFF";
						digitalWrite(pinLed, LOW);
						postTweet(automaticOff);
						printLCD("Automatic OFF");
					}
					
					if(readString.substring(BLI, BLI + 5) == "BLI=T")
					{
						digitalWrite(pinBliUp, HIGH);
						stateBli = "UP";
						delay(400);
						digitalWrite(pinBliUp, LOW);
						postTweet(blindsUp);
						printLCD("Blinds UP");
					}
					else if (readString.substring(BLI, BLI + 5) == "BLI=F")
					{
						digitalWrite(pinBliDow, HIGH);
						stateBli = "DOWN";
						delay(400);
						digitalWrite(pinBliDow, LOW);
						postTweet(blindsDown);
						printLCD("Blinds DOWN");
					}
					
					//Here is the web page code
					client.println("HTTP/1.1 200 OK");
					client.println("Content-Type: text/html");
					client.println();

					client.println("<html>");
					client.println("<head>");
					client.println("<title>Home automation system with Twitter</title>");
					client.println("</head>");
					client.println("<body width=100% height=100%>");
					client.println("<center>");
					client.println("<h3>LIGHTS ON/OFF</h3>");
					client.print("<br>");
					client.print("State: ");
					client.print(stateLed);
					client.print("<br>");
					client.println("<input type=submit value=ON style=width:200px;height:75px onClick=location.href='./?LED=T\'>");
					client.println("<input type=submit value=OFF style=width:200px;height:75px onClick=location.href='./?LED=F\'>");
					client.println("<h3>AUTOMATIC MODE ON/OFF</h3>");
					client.print("<br>");
					client.print("State: ");
					client.print(stateAut);
					client.print("<br>");
					client.println("<input type=submit value=ON style=width:200px;height:75px onClick=location.href='./?AUT=T\'>");
					client.println("<input type=submit value=OFF style=width:200px;height:75px onClick=location.href='./?AUT=F\'>");
					client.println("<br><br>");
					client.println("<h3>BLINDS UP/DOWN</h3>");
					client.print("<br>");
					client.print("State: ");
					client.print(stateBli);
					client.print("<br>");
					client.println("<input type=submit value=UP style=width:200px;height:75px onClick=location.href='./?BLI=T\'>");
					client.println("<input type=submit value=DOWN style=width:200px;height:75px onClick=location.href='./?BLI=F\'>");
					client.println("<br><br>");
					client.println("</center>");
					client.println("</body>");
					client.println("</html>");
					client.stop();
					readString = "";
				}
			}
		}
	}
}

void checkLight()
{
	//Read the value from the LDR
	light = analogRead(pinLight);
	
	//Print the value to the Serial Port
	Serial.println(light);
	
	//Check if the automatic mode is ON
	if(light > lightAmount && stateLightsOff == true && stateAut == "ON")
	{
		digitalWrite(pinLed, HIGH);
		stateLightsOff = false;
	}
	else if(light <= lightAmount && stateLightsOff == false && stateAut == "ON")
	{
		digitalWrite(pinLed, LOW);
		stateLightsOff = true;
	}
}

void printLCD(char message[])
{
	//Clear the LCD
	lcd.clear();
	
	//Write into the LCD the message
	lcd.print(message);
}

void postTweet(int n)
{
	//Check the value of n and write the message depending this value
	switch(n)
	{
		case 1:
		for(int i=0; i<30; i++)
		{
			tweet[i]=msgArduinoOn[i];
		}
		break;
		
		case 2:
		for(int i=0; i<30; i++)
		{
			tweet[i]=msgLightsOn[i];
		}
		break;
		
		case 3:
		for(int i=0; i<30; i++)
		{
			tweet[i]=msgLightsOff[i];
		}
		break;
		
		case 4:
		for(int i=0; i<30; i++)
		{
			tweet[i]=msgAutomaticOn[i];
		}
		break;
		
		case 5:
		for(int i=0; i<30; i++)
		{
			tweet[i]=msgAutomaticOff[i];
		}
		break;
		
		case 6:
		for(int i=0; i<30; i++)
		{
			tweet[i]=msgBlindsUp[i];
		}
		break;
		
		case 7:
		for(int i=0; i<30; i++)
		{
			tweet[i]=msgBlindsDown[i];
		}
		break;
	}
	
	Serial.println("connecting ...");
	if (twitter.post(tweet))
	{
		int status = twitter.wait(&Serial);
		if (status == messageOK)
		{
			Serial.println("OK.");
		}
		else
		{
			Serial.print("failed : code ");
			Serial.println(status);
		}
	}
	else
	{
		Serial.println("connection failed.");
	} 
}
